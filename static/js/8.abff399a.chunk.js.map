{"version":3,"sources":["components/Formik/EditProfileFormik.tsx","components/Users/EditProfile.tsx","Screens/EditProfileScreen.tsx","components/Message.tsx","components/Users/NoUserData.tsx"],"names":["phoneRegex","RegExp","EditProfileFormik","user","dispatch","useDispatch","initialValues","nick","firstName","lastName","phone","opinion","email","providerId","uid","id","validationSchema","Yup","min","max","required","matches","data-testid","onSubmit","values","seveEditedUserDataAction","formik","className","htmlFor","name","props","field","meta","form","type","touched","error","disabled","placeholder","rows","cols","dirty","errors","EditProfile","logoutAfterTime","logoutUserHandle","history","useHistory","userAuth","useSelector","state","userAction","isLoading","isError","useState","wasDataSend","setWasDataSend","userEditProfile","returnUserEditProfielOrUdefined","useEffect","prev","push","photoId","src","alt","size","color","undefined","NoUserData","confirmAction","EditProfileScreen","userSignOutAction","userRemoveCookieTokenAction","TitleSection","title","time","setTimeout","TypeMessage","IconButtonConfirm","customStyles","makeStyles","theme","createStyles","button","margin","spacing","Message","children","cancelAction","typeMessage","textButtonConfirm","iconButtonConfirm","classes","height","display","alignItems","justifyContent","severity","p","flexGrow","minWidth","mt","variant","onClick","startIcon","DELETE_ICON","ERROR"],"mappings":"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","file":"static/js/8.abff399a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, Form, Formik, FormikProps, FieldProps } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { seveEditedUserDataAction } from '../../redux/actions/userActions';\r\nimport { IUserEditProfile } from '../../models/users';\r\n\r\n\r\ninterface EditProfileFormikProps {\r\n  user: IUserEditProfile\r\n}\r\n\r\nconst phoneRegex = RegExp(/^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{3})$/);\r\n\r\nconst EditProfileFormik: React.FC<EditProfileFormikProps> = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const initialValues: IUserEditProfile = {\r\n    nick: user.nick,\r\n    firstName: user.firstName,\r\n    lastName: user.lastName,\r\n    phone: user.phone,\r\n    opinion: user.opinion,\r\n    email: user.email,\r\n    providerId: user?.providerId,\r\n    uid: user.uid,\r\n    id: user.id\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    nick: Yup.string()\r\n      .min(3, 'minimalna liczba znaków to 3')\r\n      .max(50, ',maksymalna lczba znaków 50')\r\n      .required('pole jest wymagane w celu kontaktu instruktora'),\r\n\r\n    firstName: Yup.string()\r\n      .min(3, 'minimalna liczba znaków to 3')\r\n      .max(50, ',maksymalna lczba znaków 50')\r\n      .required('pole jest wymagane w celu kontaktu instruktora'),\r\n\r\n    lastName: Yup.string()\r\n      .min(3, 'minimalna liczba znaków to 3')\r\n      .max(50, ',maksymalna lczba znaków 50')\r\n      .required('pole jest wymagane w celu kontaktu instruktora'),\r\n\r\n    phone: Yup.string()\r\n      .matches(phoneRegex, 'nie poprawny numer kom.')\r\n      .required('pole jest wymagane w celu kontaktu instruktora'),\r\n\r\n    email: Yup.string()\r\n      .email('niepoprawny adres e-mial')\r\n      .max(50, ',maksymalna lczba znaków 50')\r\n      .required('proszę podaj adres e-mail'),\r\n\r\n    opinion: Yup.string()\r\n      .min(25, ',minimalna lczba znaków 20')\r\n      .max(500, ',maksymalna lczba znaków 500'),\r\n  });\r\n  const handleSubmit = (values: IUserEditProfile) => {\r\n    dispatch(seveEditedUserDataAction(values, user));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      data-testid='editProfileFormikComponent'\r\n    >\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {(formik: FormikProps<IUserEditProfile>) => (\r\n          <Form className=\"editUserProfile\">\r\n            <div className=\"bodyInputEditProfile\">\r\n              <label className=\"labelInputEditProfile\" htmlFor=\"name\">\r\n                nick:\r\n              </label>\r\n              <Field name=\"nick\">\r\n                {(props: FieldProps) => {\r\n                  const { field, form, meta } = props;\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        className=\"inputModalContaineFormInput\"\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        {...field}\r\n                      />\r\n\r\n                      <div className=\"errorMessenge\">\r\n                        {meta.touched && meta.error}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Field>\r\n            </div>\r\n            <div className=\"bodyInputEditProfile\">\r\n              <label className=\"labelInputEditProfile\" htmlFor=\"firstName\">\r\n                imię:\r\n              </label>\r\n              <Field name=\"firstName\">\r\n                {(props: FieldProps) => {\r\n                  const { field, form, meta } = props;\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        className=\"inputModalContaineFormInput\"\r\n                        id=\"firstName\"\r\n                        type=\"text\"\r\n                        {...field}\r\n                      />\r\n                      <div className=\"errorMessenge\">\r\n                        {meta.touched && meta.error}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Field>\r\n            </div>\r\n            <div className=\"bodyInputEditProfile\">\r\n              <label className=\"labelInputEditProfile\" htmlFor=\"lastName\">\r\n                nazwisko:\r\n              </label>\r\n              <Field name=\"lastName\">\r\n                {(props: FieldProps) => {\r\n                  const { field, form, meta } = props;\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        className=\"inputModalContaineFormInput\"\r\n                        id=\"lastName\"\r\n                        type=\"text\"\r\n                        {...field}\r\n                      />\r\n                      <div className=\"errorMessenge\">\r\n                        {meta.touched && meta.error}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Field>\r\n            </div>\r\n            <div className=\"bodyInputEditProfile\">\r\n              <label className=\"labelInputEditProfile\" htmlFor=\"phone\">\r\n                tel:\r\n              </label>\r\n              <Field name=\"phone\">\r\n                {(props: FieldProps) => {\r\n                  const { field, form, meta } = props;\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        className=\"inputModalContaineFormInput\"\r\n                        id=\"phone\"\r\n                        type=\"phone\"\r\n                        {...field}\r\n                      />\r\n                      <div className=\"errorMessenge\">\r\n                        {meta.touched && meta.error}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Field>\r\n            </div>\r\n            <div className=\"bodyInputEditProfile\">\r\n              <label className=\"labelInputEditProfile\" htmlFor=\"email\">\r\n                e-mail:\r\n              </label>\r\n              <Field name=\"email\">\r\n                {(props: FieldProps) => {\r\n                  const { field, form, meta } = props;\r\n                  return (\r\n                    <div>\r\n                      <input\r\n                        className=\"inputModalContaineFormInput\"\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        disabled={\r\n                          user.providerId === 'google.com' ||\r\n                          user.providerId === 'facebook.com'\r\n                        }\r\n                        {...field}\r\n                      />\r\n                      <div className=\"errorMessenge\">\r\n                        {meta.touched && meta.error}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Field>\r\n            </div>\r\n            <div className=\"bodyInputEditProfile\">\r\n              <label className=\"labelInputEditProfile\" htmlFor=\"opinion\">\r\n                opinia:\r\n              </label>\r\n              <Field name=\"opinion\">\r\n                {(props: FieldProps) => {\r\n                  const { field, form, meta } = props;\r\n\r\n                  return (\r\n                    <div>\r\n                      <textarea\r\n                        className=\"inputModalContaineFormInput textareaEditProfile\"\r\n                        id=\"opinion\"\r\n                        placeholder=\"Tu możesz wystawić opinię o stadninie. Wystawiając opinię WYRAŻSZ ZGODĘ na upublicznienie swojego opini wraz z zdjeciem profilu. Zawsze możesz edytować lub wykasować opinię. Usunięcie opini skutkuje usunięciem jej z miejsca publicznego strony. Jeśli nie jesteś pełnoletni o zgodę zapytaj osoby dorosłe ...\"\r\n                        // type='text'\r\n                        rows={10}\r\n                        cols={38}\r\n                        {...field}\r\n                      />\r\n\r\n                      <div className=\"errorMessenge\">\r\n                        {meta.touched && meta.error}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Field>\r\n            </div>\r\n\r\n            <div className=\"btnBodyEditProfileSave\">\r\n              <button\r\n                disabled={\r\n                  !formik.dirty ||\r\n                  !!formik.errors.nick ||\r\n                  !!formik.errors.firstName ||\r\n                  !!formik.errors.lastName ||\r\n                  !!formik.errors.phone ||\r\n                  !!formik.errors.opinion ||\r\n                  !!formik.errors.email\r\n                }\r\n                type=\"submit\"\r\n                className=\"btn btn-green btn-capitalize\"\r\n              >\r\n                zapisz\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileFormik;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport EditProfileFormik from '../Formik/EditProfileFormik';\r\nimport { PulseLoader } from 'react-spinners';\r\nimport { RootState } from '../../redux/store';\r\nimport { IUserEditProfile, IUser } from '../../models/users';\r\nimport { NoUserData } from './NoUserData';\r\n\r\n\r\nconst returnUserEditProfielOrUdefined = (user: Partial<IUser>): IUserEditProfile | undefined => {\r\n  if (user.uid && user.id && user.providerId && user.email) {\r\n    const userEditProfile: IUserEditProfile = {\r\n      uid: user.uid,\r\n      id: user.id,\r\n      providerId: user.providerId,\r\n      email: user.email,\r\n      firstName: user?.firstName,\r\n      lastName: user?.lastName,\r\n      nick: user?.nick,\r\n      opinion: user?.opinion,\r\n      phone: user?.phone\r\n    }\r\n    return userEditProfile\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\ninterface EditProfileProps {\r\n  logoutAfterTime(timeInMilesecond: number): void,\r\n  logoutUserHandle(): void\r\n}\r\n\r\nconst EditProfile: React.FC<EditProfileProps> = ({ logoutAfterTime, logoutUserHandle }) => {\r\n  const history = useHistory();\r\n\r\n  const userAuth = useSelector((state: RootState) => state.userAction);\r\n\r\n  const { user, isLoading, isError } = userAuth;\r\n  const [wasDataSend, setWasDataSend] = useState(false);\r\n\r\n  const userEditProfile = returnUserEditProfielOrUdefined(user)\r\n\r\n  useEffect(() => {\r\n    if (isLoading && !wasDataSend) {\r\n      setWasDataSend((prev) => {\r\n        return !prev;\r\n      });\r\n    }\r\n    !isLoading && !isError && wasDataSend && history.push('profil');\r\n    return () => {\r\n      setWasDataSend((prev) => {\r\n        return !prev;\r\n      });\r\n    };\r\n  }, [isLoading, isError, wasDataSend]);\r\n\r\n  return (\r\n    <div\r\n      className=\"contaniner profileContainer editProfileContainer\"\r\n      data-testid='editProfileUser'>\r\n      <div\r\n        className=\"imageProfile\"\r\n        data-testid='editImageProfile'>\r\n        {userEditProfile && user && user.photoId && (\r\n          <img\r\n            className=\"image-user imageEditProfile\"\r\n            src={user.photoId}\r\n            alt=\"użytkownik\"\r\n            data-testid='imageProfile'\r\n          />\r\n        )}\r\n        {userEditProfile && (\r\n          <div\r\n            className=\"profileButtons profileButtonPhoto\">\r\n            <button\r\n              className=\"btn btn-green btn-capitalize \r\n            btn-editProfile\"\r\n              data-testid='editImageButtonProfile'\r\n            >\r\n              {user && user.photoId && 'Zmień zdjęcie'}\r\n              {(!user || !user.photoId) && 'Dodaj zdjęcie'}\r\n            </button>\r\n          </div>\r\n        )\r\n        }\r\n      </div>\r\n      {isLoading && <PulseLoader size={35} color={'hsla(94, 30%, 43%, 1)'} />}\r\n      {!isLoading && !isError && userEditProfile !== undefined && <EditProfileFormik user={userEditProfile} />}\r\n      {!isLoading && !isError && userEditProfile === undefined && <NoUserData confirmAction={logoutUserHandle} logoutAfterTime={logoutAfterTime} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React from 'react';\r\nimport EditProfile from '../components/Users/EditProfile';\r\nimport TitleSection from '../Layout/TitleSection';\r\nimport { userSignOutAction } from './../redux/actions/userActions';\r\nimport { userRemoveCookieTokenAction } from '../redux/actions/userActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst EditProfileScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const logoutAfterTime = (time: number) => {\r\n        setTimeout(() => {\r\n            logoutUserHandle();\r\n        }, time);\r\n    }\r\n\r\n    const logoutUserHandle = () => {\r\n        dispatch(userSignOutAction);\r\n        dispatch(userRemoveCookieTokenAction);\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TitleSection\r\n                title=\"Edycja profilu\" />\r\n            <EditProfile logoutAfterTime={logoutAfterTime} logoutUserHandle={logoutUserHandle} />\r\n        </>\r\n    );\r\n};\r\nexport default EditProfileScreen","\r\nimport React from 'react'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Box, Button, Theme } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport interface IMessageProps {\r\n    readonly title: string,\r\n    readonly children: React.ReactChild,\r\n    cancelAction?(): void,\r\n    confirmAction?(): void,\r\n    readonly typeMessage: TypeMessage,\r\n    readonly textButtonConfirm?: string,\r\n    readonly iconButtonConfirm?: IconButtonConfirm\r\n}\r\n\r\nexport enum TypeMessage {\r\n    ERROR = \"error\",\r\n    WARNING = 'warning',\r\n    INFO = 'info',\r\n    SUCCESS = 'success'\r\n}\r\n\r\nexport enum IconButtonConfirm {\r\n    NO_ICON,\r\n    DELETE_ICON,\r\n}\r\n\r\n\r\nconst customStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\nexport const Message = ({ title, children, cancelAction, confirmAction, typeMessage, textButtonConfirm, iconButtonConfirm }: IMessageProps) => {\r\n    const classes = customStyles();\r\n    return (\r\n\r\n        <Box height='60vh' display='flex' alignItems='center' justifyContent={'center'}>\r\n            <Alert severity={typeMessage} >\r\n                <Box p={0.3} display='flex'>\r\n                    <AlertTitle>{title}</AlertTitle>\r\n                </Box>\r\n                <Box display='flex' flexGrow={1} minWidth={'20vw'}>\r\n                    {children}\r\n                </Box>\r\n                <Box\r\n                    display='flex'\r\n                    mt={5}\r\n                    justifyContent=\"flex-end\"\r\n                >\r\n                    {cancelAction && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={`${classes.button} cancleButtonActionMessage`}\r\n                            onClick={() => cancelAction()}\r\n                        >\r\n                            Wstecz\r\n                        </Button>\r\n                    )\r\n                    }\r\n\r\n                    {confirmAction &&\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={iconButtonConfirm === IconButtonConfirm.DELETE_ICON && <DeleteIcon />}\r\n                            className={`${classes.button} confirmButtonActionMessage`}\r\n                            onClick={() => confirmAction()}\r\n                        >\r\n                            {textButtonConfirm}\r\n                        </Button>\r\n                    }\r\n                </Box>\r\n            </Alert>\r\n        </Box>\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Message, TypeMessage } from '../Message';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\ninterface NoUserProps {\r\n    confirmAction(): void,\r\n    logoutAfterTime(timeInMileseconds: number): void\r\n}\r\n\r\nexport const NoUserData: React.FC<NoUserProps> = ({ confirmAction, logoutAfterTime }) => {\r\n\r\n    useEffect(() => {\r\n        logoutAfterTime(4000)\r\n        return () => {\r\n        }\r\n    }, [])\r\n    return (\r\n        <div\r\n            data-testid=\"messageComponent\"\r\n        >\r\n            <Message\r\n                title={'Brak danych użytkownika'}\r\n                typeMessage={TypeMessage.ERROR}\r\n                textButtonConfirm={'OK'}\r\n                confirmAction={confirmAction}\r\n            >\r\n                <Box p={5}>\r\n                    Ups coś poszło nie tak zapraszamy później...\r\n                </Box>\r\n            </Message>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}