{"version":3,"sources":["components/Message.tsx","components/Users/ConfirmDeleteUser.tsx","components/Users/ConfirmDeleteUserDetail.tsx","components/Users/NoUserData.tsx"],"names":["TypeMessage","IconButtonConfirm","ActionMessage","customStyles","makeStyles","theme","createStyles","button","margin","spacing","Message","title","children","cancelAction","confirmAction","typeMessage","textButtonConfirm","iconButtonConfirm","classes","Box","height","display","alignItems","justifyContent","Alert","severity","p","AlertTitle","flexGrow","mt","Button","variant","color","className","onClick","startIcon","DELETE_ICON","ConfirmDeleteUserDetail","actionMessage","user","goToHomePage","logoutUser","MESSAGE","ERROR","email","LOADING","CircularProgress","NO_ICON","SUCCESS","NoUserData","logoutAfterTime","useEffect","createMuiTheme","useStyles","container","padding","paper","isUserHaveAllProperty","emailVerified","providerId","userUid","ConfirmDeleteUser","userMDB","useState","setActionMessage","history","useHistory","dispatch","useDispatch","userAuth","useSelector","state","userAction","isLoading","isError","userReq","errorMessage","uid","undefined","time","setTimeout","logoutUserHandle","prevAction","userSignOutAction","userRemoveCookieTokenAction","push","ThemeProvider","Container","maxWidth","userRemoveAction","goBack"],"mappings":"uNAiBYA,EAOAC,E,gKAPAD,K,cAAAA,E,kBAAAA,E,YAAAA,E,mBAAAA,M,cAOAC,O,qBAAAA,I,8BAAAA,M,KAMZ,ICjBYC,EDiBNC,EAAeC,aAAW,SAACC,GAAD,OAC5BC,YAAa,CACTC,OAAQ,CACJC,OAAQH,EAAMI,QAAQ,SAKrBC,EAAU,SAAC,GAAwH,IAAtHC,EAAqH,EAArHA,MAAOC,EAA8G,EAA9GA,SAAUC,EAAoG,EAApGA,aAAcC,EAAsF,EAAtFA,cAAeC,EAAuE,EAAvEA,YAAaC,EAA0D,EAA1DA,kBAAmBC,EAAuC,EAAvCA,kBAC9FC,EAAUf,IAChB,OAEI,cAACgB,EAAA,EAAD,CAAKC,OAAO,OAAOC,QAAQ,OAAOC,WAAW,SAASC,eAAgB,SAAtE,SACI,eAACC,EAAA,EAAD,CAAOC,SAAUV,EAAjB,UACI,cAACI,EAAA,EAAD,CAAKO,EAAG,GAAR,SACI,cAACC,EAAA,EAAD,UAAahB,MAEjB,cAACQ,EAAA,EAAD,CAAKS,SAAU,EAAf,SACKhB,IAEL,eAACO,EAAA,EAAD,CACIE,QAAQ,OACRQ,GAAI,EACJN,eAAe,WAHnB,UAKKV,GACG,cAACiB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,UAAS,UAAKf,EAAQX,OAAb,8BACT2B,QAAS,kBAAMrB,KAJnB,oBAWHC,GACG,cAACgB,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,YACNG,UAAWlB,IAAsBhB,EAAkBmC,aAAe,cAAC,IAAD,IAClEH,UAAS,UAAKf,EAAQX,OAAb,+BACT2B,QAAS,kBAAMpB,KALnB,SAOKE,a,UE2BdqB,EAnFyD,SAAC,GAOlE,IANHC,EAME,EANFA,cACAzB,EAKE,EALFA,aACAC,EAIE,EAJFA,cACAyB,EAGE,EAHFA,KACAC,EAEE,EAFFA,aACAC,EACE,EADFA,WAGA,OACI,qCACKH,IAAkBpC,EAAcwC,SAC7B,cAAC,EAAD,CAAS/B,MAAK,iBACVI,YAAaf,EAAY2C,MACzB9B,aAAcA,EACdC,cAAeA,EACfE,kBAAmB,kBACnBC,kBAAmBhB,EAAkBmC,YALzC,SAOK,mCACG,eAACjB,EAAA,EAAD,CAAKO,EAAG,EAAR,kCACoB,2CAAYa,EAAKK,SADrC,mQAuBXN,IAAkBpC,EAAc2C,SAC7B,cAAC1B,EAAA,EAAD,CAAKC,OAAO,OAAOC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAArE,SACI,cAACuB,EAAA,EAAD,CAAkBd,MAAM,cAG/BM,IAAkBpC,EAAcyC,OAAU,cAAC,EAAD,CACvChC,MAAK,iBACLI,YAAaf,EAAY2C,MACzB3B,kBAAmB,KACnBC,kBAAmBhB,EAAkB8C,QACrCjC,cAAe0B,EALwB,SAMtC,mCACG,eAACrB,EAAA,EAAD,CAAKO,EAAG,EAAR,gDAC6B,2CAAYa,EAAKK,SAD9C,uEASPN,IAAkBpC,EAAc8C,SAC7B,cAAC,EAAD,CACIrC,MAAK,iBACLI,YAAaf,EAAYgD,QACzBhC,kBAAmB,KACnBC,kBAAmBhB,EAAkB8C,QACrCjC,cAAe2B,EALnB,SAMK,mCACG,eAACtB,EAAA,EAAD,CAAKO,EAAG,EAAR,mBACU,2CAAYa,EAAKK,SAD3B,6CCjFXK,EAAoC,SAAC,GAAwC,IAAtCnC,EAAqC,EAArCA,cAAeoC,EAAsB,EAAtBA,gBAO/D,OALAC,qBAAU,WAEN,OADAD,EAAgB,KACT,eAER,IAEC,cAAC,EAAD,CACIvC,MAAO,+BACPI,YAAaf,EAAY2C,MACzB3B,kBAAmB,KACnBF,cAAeA,EAJnB,SAMI,cAACK,EAAA,EAAD,CAAKO,EAAG,EAAR,gF,SFXAxB,O,qBAAAA,I,iBAAAA,I,qBAAAA,I,sBAAAA,M,KAOZ,IAAMG,EAAQ+C,YAAe,IAQvBC,EAAYjD,YAAW,CACzBkD,UAAW,CACPlC,OAAQ,OACRmC,QAAS,iBAEbC,MAAO,CACHpC,OAAQ,QAEZb,OAAQ,CACJC,OAAQH,EAAMI,QAAQ,MAKjBgD,EAAwB,SAACb,EAAec,EAAwBC,EAAoBC,GAC7F,OAAQF,KAAmBC,KAAgBC,KAAahB,GAiG7CiB,UA9FqB,WAAO,IAYnCC,EAZkC,EAEIC,mBAAwB7D,EAAcwC,SAF1C,mBAE/BJ,EAF+B,KAEhB0B,EAFgB,KAGhCC,EAAUC,cACVhD,EAAUmC,IACVc,EAAWC,cAGXC,EAAWC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,cACjDjC,EAAwI8B,EAAxI9B,KAAMkC,EAAkIJ,EAAlII,UAAWC,EAAuHL,EAAvHK,QACnBC,GAD0IN,EAA9GO,aAClBrC,GAOZuB,EAJAvB,EAAKK,OACLL,EAAKmB,eACLnB,EAAKoB,YACLpB,EAAKsC,IACK,CACNjC,MAAOL,EAAKK,MACZc,cAAenB,EAAKmB,cACpBC,WAAYpB,EAAKoB,WACjBkB,IAAKtC,EAAKsC,UAIJC,EAGd,IAAM5B,EAAkB,SAAC6B,GACrBC,YAAW,WACPC,MACDF,IAGP5B,qBAAU,WAUN,OATIb,IAAkBpC,EAAcwC,UAEhCgC,IAAYD,GAAcT,GAAiB,SAACkB,GAAD,OAAgBhF,EAAcyC,UAExE+B,IAAYD,GAAcT,GAAiB,SAACkB,GAAD,OAAgBhF,EAAc8C,YAEzE0B,IAAYD,GAAavB,EAAgB,MAGvC,eAGR,CAACuB,IAGJ,IAAMQ,EAAmB,WACrBd,EAASgB,KACThB,EAASiB,KACTnB,EAAQoB,KAAK,MAgBjB,OACI,cAACC,EAAA,EAAD,CAAejF,MAAOA,EAAtB,SACI,eAACkF,EAAA,EAAD,CAAWC,SAAU,KAAMvD,UAAWf,EAAQoC,UAA9C,UAEKQ,GACG,cAAC,EAAD,CACIxB,cAAeA,EACfxB,cAhBY,WAC5BkD,EAAiB9D,EAAc2C,SAC/BsB,EAASsB,YAAiBd,KAeV9D,aArBW,WAC3BoD,EAAQyB,UAqBQnD,KAAMuB,EACNtB,aAdO,WACvByB,EAAQoB,KAAK,MAcG5C,WAAYwC,KAIlBnB,GAAY,cAAC,EAAD,CACVhD,cAAemE,EACf/B,gBAAiBA","file":"static/js/15.5359688a.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Box, Button, Theme } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport interface IWarningProps {\r\n    readonly title: string,\r\n    readonly children: React.ReactChild,\r\n    cancelAction?(): void,\r\n    confirmAction?(): void,\r\n    readonly typeMessage: TypeMessage,\r\n    readonly textButtonConfirm?: string,\r\n    readonly iconButtonConfirm?: IconButtonConfirm\r\n}\r\n\r\nexport enum TypeMessage {\r\n    ERROR = \"error\",\r\n    WARNING = 'warning',\r\n    INFO = 'info',\r\n    SUCCESS = 'success'\r\n}\r\n\r\nexport enum IconButtonConfirm {\r\n    NO_ICON,\r\n    DELETE_ICON,\r\n}\r\n\r\n\r\nconst customStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        }\r\n    }));\r\n\r\n\r\nexport const Message = ({ title, children, cancelAction, confirmAction, typeMessage, textButtonConfirm, iconButtonConfirm }: IWarningProps) => {\r\n    const classes = customStyles();\r\n    return (\r\n\r\n        <Box height='60vh' display='flex' alignItems='center' justifyContent={'center'}>\r\n            <Alert severity={typeMessage} >\r\n                <Box p={0.3}>\r\n                    <AlertTitle>{title}</AlertTitle>\r\n                </Box>\r\n                <Box flexGrow={1}>\r\n                    {children}\r\n                </Box>\r\n                <Box\r\n                    display='flex'\r\n                    mt={5}\r\n                    justifyContent=\"flex-end\"\r\n                >\r\n                    {cancelAction && (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={`${classes.button} cancleButtonActionMessage`}\r\n                            onClick={() => cancelAction()}\r\n                        >\r\n                            Wstecz\r\n                        </Button>\r\n                    )\r\n                    }\r\n\r\n                    {confirmAction &&\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={iconButtonConfirm === IconButtonConfirm.DELETE_ICON && <DeleteIcon />}\r\n                            className={`${classes.button} confirmButtonActionMessage`}\r\n                            onClick={() => confirmAction()}\r\n                        >\r\n                            {textButtonConfirm}\r\n                        </Button>\r\n                    }\r\n                </Box>\r\n            </Alert>\r\n        </Box>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { createMuiTheme, ThemeProvider, Container, Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userRemoveAction, userSignOutAction, userRemoveCookieTokenAction } from '../../redux/actions/userActions';\r\nimport { RootState } from '../../redux/store'\r\nimport { IUserBaseMongoBD, IUser, OneOrUndefined } from '../../models/users';\r\nimport ConfirmDeleteUserDetail from './ConfirmDeleteUserDetail';\r\nimport { NoUserData } from './NoUserData';\r\n\r\n\r\n\r\nexport enum ActionMessage {\r\n    MESSAGE,\r\n    ERROR,\r\n    SUCCESS,\r\n    LOADING\r\n}\r\n\r\nconst theme = createMuiTheme({\r\n\r\n    // palette: {\r\n    //     primary: green\r\n    // }\r\n})\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        height: '91vh',\r\n        padding: '3.75rem 0 0 0',\r\n    },\r\n    paper: {\r\n        height: '80vh'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    }\r\n\r\n});\r\n\r\nexport const isUserHaveAllProperty = (email: string, emailVerified: boolean, providerId: string, userUid: string): boolean => {\r\n    return (emailVerified && !!providerId && !!userUid && !!email)\r\n}\r\n\r\nconst ConfirmDeleteUser: React.FC = () => {\r\n\r\n    const [actionMessage, setActionMessage] = useState<ActionMessage>(ActionMessage.MESSAGE)\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userAuth = useSelector((state: RootState) => state.userAction);\r\n    const { user, isLoading, isError, errorMessage }: { user: Partial<IUser>, isLoading: boolean, isError: boolean, errorMessage: string | null } = userAuth;\r\n    const userReq = user as IUser;\r\n\r\n    let userMDB: OneOrUndefined<IUserBaseMongoBD>;\r\n    if (user.email &&\r\n        user.emailVerified &&\r\n        user.providerId &&\r\n        user.uid) {\r\n        userMDB = {\r\n            email: user.email,\r\n            emailVerified: user.emailVerified,\r\n            providerId: user.providerId,\r\n            uid: user.uid\r\n        };\r\n    }\r\n    else {\r\n        userMDB = undefined;\r\n    }\r\n\r\n    const logoutAfterTime = (time: number) => {\r\n        setTimeout(() => {\r\n            logoutUserHandle();\r\n        }, time);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (actionMessage !== ActionMessage.MESSAGE) {\r\n\r\n            isError && !isLoading && (setActionMessage((prevAction) => ActionMessage.ERROR))\r\n\r\n            !isError && !isLoading && (setActionMessage((prevAction) => ActionMessage.SUCCESS))\r\n\r\n            !isError && !isLoading && logoutAfterTime(4000)\r\n        }\r\n\r\n        return () => {\r\n            // cleanup\r\n        }\r\n    }, [isLoading])\r\n\r\n\r\n    const logoutUserHandle = () => {\r\n        dispatch(userSignOutAction);\r\n        dispatch(userRemoveCookieTokenAction);\r\n        history.push('/')\r\n    }\r\n\r\n    const cancelRemoveUserHandle = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    const confirmRemoveUserHandle = () => {\r\n        setActionMessage(ActionMessage.LOADING);\r\n        dispatch(userRemoveAction(userReq))\r\n    }\r\n\r\n    const goToHomePageHandle = () => {\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Container maxWidth={'sm'} className={classes.container}>\r\n\r\n                {userMDB && (\r\n                    <ConfirmDeleteUserDetail\r\n                        actionMessage={actionMessage}\r\n                        confirmAction={confirmRemoveUserHandle}\r\n                        cancelAction={cancelRemoveUserHandle}\r\n                        user={userMDB}\r\n                        goToHomePage={goToHomePageHandle}\r\n                        logoutUser={logoutUserHandle}\r\n                    />\r\n                )\r\n                }\r\n                {!userMDB && (<NoUserData\r\n                    confirmAction={logoutUserHandle}\r\n                    logoutAfterTime={logoutAfterTime}\r\n                />)}\r\n\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default ConfirmDeleteUser\r\n\r\n\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core';\r\nimport { IconButtonConfirm, Message, TypeMessage } from '../Message';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { IUserBaseMongoBD } from '../../models/users';\r\nimport { ActionMessage } from './ConfirmDeleteUser';\r\n\r\n\r\ninterface ConfirmDeleteUserDetailProps {\r\n    actionMessage: ActionMessage;\r\n    cancelAction(): void;\r\n    confirmAction(): void;\r\n    user: IUserBaseMongoBD;\r\n    goToHomePage(): void;\r\n    logoutUser(): void\r\n}\r\n\r\n\r\n\r\nconst ConfirmDeleteUserDetail: React.FC<ConfirmDeleteUserDetailProps> = ({\r\n    actionMessage,\r\n    cancelAction,\r\n    confirmAction,\r\n    user,\r\n    goToHomePage,\r\n    logoutUser\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n            {actionMessage === ActionMessage.MESSAGE && (\r\n                <Message title={`Usuwanie konta`}\r\n                    typeMessage={TypeMessage.ERROR}\r\n                    cancelAction={cancelAction}\r\n                    confirmAction={confirmAction}\r\n                    textButtonConfirm={'Usuń konto'}\r\n                    iconButtonConfirm={IconButtonConfirm.DELETE_ICON}\r\n                >\r\n                    {<>\r\n                        <Box p={5}>\r\n                            Usunięcie konta <strong>{`${user.email}`}</strong> skutkuje trwałym i nie odwracalnym wykasowniem użutkownika oraz wszelkich danych z jego kontem związanych, bez możliwości ich późniejszego odzyskania.\r\n                            Jeśli nie chesz usunąć konta wciśnij wstecz.\r\n                        </Box>\r\n                    </>\r\n                    }</Message>\r\n            )}\r\n\r\n\r\n            {/* <Message\r\n                    title='Usuwanie konta'\r\n                     typeMessage={TypeMessage.INFO} \r\n                     textButtonConfirm={'OK'}\r\n                     iconButtonConfirm={IconButtonConfirm.NO_ICON}                                \r\n                    >\r\n                          {<>\r\n                              <Box p={5} minWidth={'60vh'}>\r\n                              <CircularProgress color=\"primary\" />\r\n                              </Box>\r\n                          </>\r\n                          }\r\n                </Message>  */}\r\n\r\n            {actionMessage === ActionMessage.LOADING && (\r\n                <Box height='60vh' display='flex' alignItems='center' justifyContent='center'>\r\n                    <CircularProgress color=\"primary\" />\r\n                </Box>)}\r\n\r\n            {actionMessage === ActionMessage.ERROR && (<Message\r\n                title={`Usuwanie konta`}\r\n                typeMessage={TypeMessage.ERROR}\r\n                textButtonConfirm={'OK'}\r\n                iconButtonConfirm={IconButtonConfirm.NO_ICON}\r\n                confirmAction={goToHomePage}>\r\n                {<>\r\n                    <Box p={5} >\r\n                        Coś poszło nie tak konto <strong>{`${user.email}`}</strong> nie zostało usunięte zapraszam później :-(\r\n                        </Box>\r\n                </>\r\n                }</Message>\r\n            )\r\n            }\r\n\r\n\r\n            {actionMessage === ActionMessage.SUCCESS && (\r\n                <Message\r\n                    title={`Usuwanie konta`}\r\n                    typeMessage={TypeMessage.SUCCESS}\r\n                    textButtonConfirm={'OK'}\r\n                    iconButtonConfirm={IconButtonConfirm.NO_ICON}\r\n                    confirmAction={logoutUser}>\r\n                    {<>\r\n                        <Box p={5} >\r\n                            Konto <strong>{`${user.email}`}</strong> zostało usunięte :-(\r\n                        </Box>\r\n                    </>\r\n                    }</Message>)}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ConfirmDeleteUserDetail\r\n\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Message, TypeMessage } from '../Message';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\ninterface NoUserProps {\r\n    confirmAction(): void,\r\n    logoutAfterTime(timeInMileseconds: number): void\r\n}\r\n\r\nexport const NoUserData: React.FC<NoUserProps> = ({ confirmAction, logoutAfterTime }) => {\r\n\r\n    useEffect(() => {\r\n        logoutAfterTime(4000)\r\n        return () => {\r\n        }\r\n    }, [])\r\n    return (\r\n        <Message\r\n            title={'Brak danych użytkownika'}\r\n            typeMessage={TypeMessage.ERROR}\r\n            textButtonConfirm={'OK'}\r\n            confirmAction={confirmAction}\r\n        >\r\n            <Box p={5}>\r\n                Ups coś poszło nie tak zapraszamy później...\r\n            </Box>\r\n        </Message>\r\n    )\r\n}\r\n"],"sourceRoot":""}